dependencies {
    implementation project(path:':common-cvi', configuration: 'default')
    implementation project(path:':domain-cvi', configuration: 'default')
    implementation project(path:':domain-cvi-oauth-service', configuration: 'default')
    implementation project(path:':domain-cvi-publicdata-service', configuration: 'default')
    implementation project(path:':domain-cvi-scheduler', configuration: 'default')
    implementation project(path:':domain-cvi-aws-s3-service', configuration: 'default')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'javax.cache:cache-api:1.1.1'
    implementation 'org.ehcache:ehcache:3.9.4'

    testImplementation 'io.rest-assured:rest-assured:4.3.3'
}

jacocoTestCoverageVerification { // 코드 커버리지 측정항목 시행
    def Qdomains = []

    for (qPattern in "*.QA".."*.QZ") {
        Qdomains.add(qPattern + "*")
    }

    violationRules { // 위반 규칙
        rule {
            enabled = true
            element = 'BUNDLE'

            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }

            excludes = [
                    // 커버리지 제외할 클래스
                    '*.DataLoader*',
                    '*.CviApplication*',
                    '*.DummyData*',
                    '*.KakaoProfile*',
                    '*.NaverProfile*'
            ] + Qdomains
        }
    }
}

sonarqube {
    properties {
        property "sonar.exclusions", "**/*Test*.*, **/Q*.java, **/*Doc*.java"
    }
}