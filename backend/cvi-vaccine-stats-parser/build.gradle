plugins {
    id 'java'
    id 'jacoco'
    id 'org.sonarqube'
}

group 'com.backjoongwon'
version '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

task wrapper(type: Wrapper) {
    gradleVersion = '6.8.3'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.20.2'
    testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.7.2')
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.4'

    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation('ch.qos.logback:logback-classic:1.2.3') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'ch.qos.logback', module: 'logback-core'
    }
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.11.2'
    testImplementation 'org.mockito:mockito-inline:3.11.2'
}

sonarqube {
    properties {
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
    }
}

jacoco {
    toolVersion = '0.8.7'
}

jacocoTestReport {
    dependsOn test // 리포트가 만들어지기 전 테스트 실행되어야 한다.
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled false
    }

    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification { // 코드 커버리지 측정항목 시행

    violationRules { // 위반 규칙
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.80
            }

            excludes = [// 커버리지 제외할 클래스
            ]
        }
    }
}

test {
    useJUnitPlatform()

    finalizedBy 'jacocoTestReport'
}
